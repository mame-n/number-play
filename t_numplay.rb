require "test/unit"
require "pp"
require "./numplay.rb"

class TC < Test::Unit::TestCase
  def setup
    @o = Numplay.new
  end

  def test_main
    ans = [
        [1, 4, 6, 3, 5, 8, 7, 2, 9],
        [2, 8, 9, 7, 6, 4, 5, 1, 3],
        [7, 5, 3, 1, 9, 2, 8, 6, 4],
        [4, 7, 1, 6, 8, 9, 2, 3, 5],
        [6, 3, 8, 2, 1, 5, 9, 4, 7],
        [5, 9, 2, 4, 7, 3, 1, 8, 6],
        [8, 6, 7, 5, 4, 1, 3, 9, 2],
        [3, 1, 4, 9, 2, 7, 6, 5, 8],
        [9, 2, 5, 8, 3, 6, 4, 7, 1]
    ]
    assert_equal( ans, @o.main )
    o = Numplay.new("top-76")
    ans = [
        [1, 4, 6, 3, 5, 8, 7, 2, 9],
        [2, 8, 9, 7, 6, 4, 5, 1, 3],
        [7, 5, 3, 1, 9, 2, 8, 6, 4],
        [4, 7, 1, 6, 8, 9, 2, 3, 5],
        [6, 3, 8, 2, 1, 5, 9, 4, 7],
        [5, 9, 2, 4, 7, 3, 1, 8, 6],
        [8, 6, 7, 5, 4, 1, 3, 9, 2],
        [3, 1, 4, 9, 2, 7, 6, 5, 8],
        [9, 2, 5, 8, 3, 6, 4, 7, 1]
    ]
    assert_equal( ans, o.main )
  end

  def test_readfile
    o = Numplay.new("top-76")
    ans = [
        [0, 0, 0, 0, 0, 3, 3, 0, 0],
        [1, 0, 7, 9, 0, 0, 0],
        [3, 8, 0, 1, 0, 0, 0, 0, 0],
        [7, 1, 0, 0, 0, 0, 0, 4, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 2, 0, 5, 8, 0],
        [0, 0, 0, 0, 2, 0, 9, 6, 0],
        [0, 0, 4, 0, 8, 0, 0, 0, 0],
        [0, 0, 0, 5, 0, 0, 0, 3, 4]
    ]
    assert_equal( ans, o.readfile( "top-76" ) )
  end

end